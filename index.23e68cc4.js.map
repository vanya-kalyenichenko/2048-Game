{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar button = document.querySelector(\"button\");\nvar messageStart = document.querySelector(\".message_start\");\nvar messageLose = document.querySelector(\".message_lose\");\nvar messageWin = document.querySelector(\".message_win\");\nvar scoreBoard = document.querySelector(\".game_score\");\nvar tableCells = document.querySelectorAll(\"td\");\nvar tableSize = 4;\nvar score = 0;\nvar scoreBuffer = [];\nvar keyCode = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40\n};\nvar gameTable = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nfunction checkIfFull() {\n    for(var i = 0; i < tableSize; i++){\n        if (gameTable.includes(0)) return false;\n    }\n}\nfunction random() {\n    while(!checkIfFull()){\n        var row = Math.floor(Math.random() * 4);\n        var col = Math.floor(Math.random() * 4);\n        if (gameTable[row][col] === 0) {\n            gameTable[row][col] = Math.random() >= 0.5 ? 4 : 2;\n            break;\n        }\n    }\n}\nfunction connect(data) {\n    var arr = [];\n    var alpha = data.shift();\n    if (!alpha) return;\n    for(var i = 0; i < tableSize; i++){\n        var beta = data.shift();\n        if (!beta) {\n            if (alpha) arr.push(alpha);\n            break;\n        } else if (alpha === beta) {\n            arr.push(alpha + beta);\n            scoreBuffer.push(alpha + beta);\n            alpha = null;\n        } else if (alpha !== beta) {\n            if (alpha) arr.push(alpha);\n            alpha = beta;\n        }\n    }\n    return arr.slice();\n}\nfunction makeMove(direction) {\n    var gameDataNext = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    switch(direction){\n        case keyCode.up:\n            var _loop = function(j) {\n                var arr = [];\n                for(var i = 0; i < tableSize; i++)arr.push(gameTable[i][j]);\n                var shifted = connect(arr.filter(function(val) {\n                    return val > 0;\n                }));\n                if (shifted) for(var i1 = 0; i1 < shifted.length; i1++)gameDataNext[i1][j] = shifted[i1];\n            };\n            for(var j = 0; j < tableSize; j++)_loop(j);\n            break;\n        case keyCode.down:\n            var _loop1 = function(j1) {\n                var arr = [];\n                for(var i = 0; i < tableSize; i++)arr.push(gameTable[tableSize - 1 - i][j1]);\n                var shifted = connect(arr.filter(function(val) {\n                    return val > 0;\n                }));\n                if (shifted) for(var i1 = 0; i1 < shifted.length; i1++)gameDataNext[tableSize - 1 - i1][j1] = shifted[i1];\n            };\n            for(var j1 = 0; j1 < tableSize; j1++)_loop1(j1);\n            break;\n        case keyCode.left:\n            var _loop2 = function(i) {\n                var shifted = connect(gameTable[i].filter(function(val) {\n                    return val > 0;\n                }));\n                if (shifted) for(var j = 0; j < shifted.length; j++)gameDataNext[i][j] = shifted[j];\n            };\n            for(var i = 0; i < tableSize; i++)_loop2(i);\n            break;\n        case keyCode.right:\n            var _loop3 = function(i1) {\n                var shifted = connect(gameTable[i1].filter(function(val) {\n                    return val > 0;\n                }).reverse());\n                if (shifted) for(var j = 0; j < shifted.length; j++)gameDataNext[i1][tableSize - 1 - j] = shifted[j];\n            };\n            for(var i1 = 0; i1 < tableSize; i1++)_loop3(i1);\n            break;\n        default:\n            break;\n    }\n    return gameDataNext;\n}\nfunction gameEnd() {\n    if (\"\".concat(gameTable) !== \"\".concat(makeMove(keyCode.up)) || \"\".concat(gameTable) !== \"\".concat(makeMove(keyCode.down)) || \"\".concat(gameTable) !== \"\".concat(makeMove(keyCode.left)) || \"\".concat(gameTable) !== \"\".concat(makeMove(keyCode.right))) return true;\n}\nfunction addScore() {\n    if (scoreBuffer.length > 0) {\n        score += scoreBuffer.reduce(function(acc, cur) {\n            return acc + cur;\n        });\n        scoreBoard.textContent = !score ? 0 : score;\n    }\n}\nfunction action(direction) {\n    scoreBuffer = [];\n    var gameDataNext = makeMove(direction);\n    if (\"\".concat(gameTable) === \"\".concat(gameDataNext)) return false;\n    gameTable = gameDataNext;\n    return true;\n}\nfunction endGame(result) {\n    if (result) messageWin.classList.remove(\"hidden\");\n    else messageLose.classList.remove(\"hidden\");\n    document.removeEventListener(\"keydown\", start);\n}\nfunction init() {\n    button.classList.remove(\"start\");\n    button.textContent = \"Restart\";\n    button.classList.add(\"restart\");\n    messageStart.classList.add(\"hidden\");\n    messageWin.classList.add(\"hidden\");\n    messageLose.classList.add(\"hidden\");\n    scoreBoard.textContent = \"0\";\n    score = 0;\n    cleanTable();\n    random();\n    random();\n    draw();\n    document.addEventListener(\"keydown\", start);\n}\nfunction cleanTable() {\n    _to_consumable_array(tableCells).map(function(el) {\n        el.classList.remove(\"field_cell--\".concat(el.textContent));\n        el.textContent = \"\";\n    });\n    gameTable.map(function(row) {\n        return row.map(function(_, i) {\n            row[i] = 0;\n        });\n    });\n}\nfunction draw() {\n    var gameDataUnpacked = [];\n    gameTable.forEach(function(rows) {\n        rows.forEach(function(cells) {\n            gameDataUnpacked.push(cells);\n        });\n    });\n    tableCells.forEach(function(cells) {\n        var text = gameDataUnpacked.shift();\n        cells.textContent = !text ? null : text;\n        cells.className = \"field_cell\";\n        cells.classList.add(\"field_cell--\".concat(cells.textContent));\n    });\n}\nfunction start(e) {\n    if (e.keyCode < 36 || e.keyCode > 41) return;\n    if (action(e.keyCode)) {\n        if (scoreBuffer.includes(2048)) endGame(true);\n        addScore();\n        random();\n        if (!checkIfFull() && !gameEnd()) endGame(false);\n        scoreBuffer = [];\n        draw();\n    }\n}\nbutton.addEventListener(\"click\", init);\n\n//# sourceMappingURL=index.23e68cc4.js.map\n","'use strict';\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message_start');\nconst messageLose = document.querySelector('.message_lose');\nconst messageWin = document.querySelector('.message_win');\nconst scoreBoard = document.querySelector('.game_score');\nconst tableCells = document.querySelectorAll('td');\nconst tableSize = 4;\nlet score = 0;\nlet scoreBuffer = [];\n\nconst keyCode = {\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n};\nlet gameTable = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction checkIfFull() {\n  for (let i = 0; i < tableSize; i++) {\n    if (gameTable.includes(0)) {\n      return false;\n    }\n  }\n}\n\nfunction random() {\n  while (!checkIfFull()) {\n    const row = Math.floor(Math.random() * 4);\n    const col = Math.floor(Math.random() * 4);\n\n    if (gameTable[row][col] === 0) {\n      gameTable[row][col] = (Math.random() >= 0.5) ? 4 : 2;\n      break;\n    }\n  }\n}\n\nfunction connect(data) {\n  const arr = [];\n  let alpha = data.shift();\n\n  if (!alpha) {\n    return;\n  }\n\n  for (let i = 0; i < tableSize; i++) {\n    const beta = data.shift();\n\n    if (!beta) {\n      if (alpha) {\n        arr.push(alpha);\n      }\n      break;\n    } else if (alpha === beta) {\n      arr.push(alpha + beta);\n      scoreBuffer.push(alpha + beta);\n      alpha = null;\n    } else if (alpha !== beta) {\n      if (alpha) {\n        arr.push(alpha);\n      }\n      alpha = beta;\n    }\n  }\n\n  return arr.slice();\n}\n\nfunction makeMove(direction) {\n  const gameDataNext = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  switch (direction) {\n    case keyCode.up:\n      for (let j = 0; j < tableSize; j++) {\n        const arr = [];\n\n        for (let i = 0; i < tableSize; i++) {\n          arr.push(gameTable[i][j]);\n        }\n\n        const shifted = connect(arr.filter((val) => val > 0));\n\n        if (shifted) {\n          for (let i = 0; i < shifted.length; i++) {\n            gameDataNext[i][j] = shifted[i];\n          }\n        }\n      }\n      break;\n\n    case keyCode.down:\n      for (let j = 0; j < tableSize; j++) {\n        const arr = [];\n\n        for (let i = 0; i < tableSize; i++) {\n          arr.push(gameTable[tableSize - 1 - i][j]);\n        }\n\n        const shifted = connect(arr.filter((val) => val > 0));\n\n        if (shifted) {\n          for (let i = 0; i < shifted.length; i++) {\n            gameDataNext[tableSize - 1 - i][j] = shifted[i];\n          }\n        }\n      }\n      break;\n\n    case keyCode.left:\n      for (let i = 0; i < tableSize; i++) {\n        const shifted = connect(gameTable[i].filter((val) => val > 0));\n\n        if (shifted) {\n          for (let j = 0; j < shifted.length; j++) {\n            gameDataNext[i][j] = shifted[j];\n          }\n        }\n      }\n      break;\n\n    case keyCode.right:\n      for (let i = 0; i < tableSize; i++) {\n        const shifted = connect(gameTable[i].filter((val) =>\n          val > 0).reverse());\n\n        if (shifted) {\n          for (let j = 0; j < shifted.length; j++) {\n            gameDataNext[i][tableSize - 1 - j] = shifted[j];\n          }\n        }\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  return gameDataNext;\n}\n\nfunction gameEnd() {\n  if (`${gameTable}` !== `${makeMove(keyCode.up)}`\n  || `${gameTable}` !== `${makeMove(keyCode.down)}`\n  || `${gameTable}` !== `${makeMove(keyCode.left)}`\n  || `${gameTable}` !== `${makeMove(keyCode.right)}`) {\n    return true;\n  }\n}\n\nfunction addScore() {\n  if (scoreBuffer.length > 0) {\n    score += scoreBuffer.reduce((acc, cur) => acc + cur);\n    scoreBoard.textContent = !score ? 0 : score;\n  }\n}\n\nfunction action(direction) {\n  scoreBuffer = [];\n\n  const gameDataNext = makeMove(direction);\n\n  if (`${gameTable}` === `${gameDataNext}`) {\n    return false;\n  }\n\n  gameTable = gameDataNext;\n\n  return true;\n}\n\nfunction endGame(result) {\n  if (result) {\n    messageWin.classList.remove('hidden');\n  } else {\n    messageLose.classList.remove('hidden');\n  }\n  document.removeEventListener('keydown', start);\n}\n\nfunction init() {\n  button.classList.remove('start');\n  button.textContent = 'Restart';\n  button.classList.add('restart');\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  scoreBoard.textContent = '0';\n  score = 0;\n  cleanTable();\n  random();\n  random();\n  draw();\n  document.addEventListener('keydown', start);\n}\n\nfunction cleanTable() {\n  [...tableCells].map(el => {\n    el.classList.remove(`field_cell--${el.textContent}`);\n    el.textContent = '';\n  });\n\n  gameTable.map(row => row.map((_, i) => {\n    row[i] = 0;\n  }));\n}\n\nfunction draw() {\n  const gameDataUnpacked = [];\n\n  gameTable.forEach((rows) => {\n    rows.forEach((cells) => {\n      gameDataUnpacked.push(cells);\n    });\n  });\n\n  tableCells.forEach((cells) => {\n    const text = gameDataUnpacked.shift();\n\n    cells.textContent = !text ? null : text;\n    cells.className = 'field_cell';\n    cells.classList.add(`field_cell--${cells.textContent}`);\n  });\n}\n\nfunction start(e) {\n  if (e.keyCode < 36 || e.keyCode > 41) {\n    return;\n  }\n\n  if (action(e.keyCode)) {\n    if (scoreBuffer.includes(2048)) {\n      endGame(true);\n    }\n    addScore();\n    random();\n\n    if (!checkIfFull() && !gameEnd()) {\n      endGame(false);\n    }\n    scoreBuffer = [];\n    draw();\n  }\n}\n\nbutton.addEventListener('click', init);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","button","document","querySelector","messageStart","messageLose","messageWin","scoreBoard","tableCells","querySelectorAll","score","scoreBuffer","keyCode","left","up","right","down","gameTable","checkIfFull","includes","random","row","Math","floor","col","connect","data","alpha","shift","beta","push","slice","makeMove","direction","gameDataNext","j","_loop","shifted","filter","val","i1","j1","_loop1","tableSize","_loop2","_loop3","reverse","endGame","result","classList","remove","removeEventListener","start","draw","gameDataUnpacked","forEach","rows","cells","text","textContent","className","add","concat","e","reduce","acc","cur","gameEnd","addEventListener","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","constructor","name","test","_non_iterable_spread","TypeError","map","el","_"],"version":3,"file":"index.23e68cc4.js.map"}